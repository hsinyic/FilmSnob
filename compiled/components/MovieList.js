import Movies from './Movies.js';
import Search from './Search.js';
import Add from './Add.js';

class MovieList extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      movieDataBase: this.props.exampleMovieList,
      filteredMovies: this.props.exampleMovieList,
      searchStr: "*"
    };
    this.updateSearchStr = this.updateSearchStr.bind(this);
    this.updatefilteredMovies = this.updatefilteredMovies.bind(this);
    this.searchMovies = this.searchMovies.bind(this);
  }

  updateSearchStr(e) {
    // console.log(e.target.value);
    this.setState({
      searchStr: e.target.value
    });
    console.log(this.state.searchStr);
    // this.searchMovies(this.state.searchStr);
  }
  updatefilteredMovies(newList) {
    this.setState({
      filteredMovies: newList
    });
  }

  searchMovies(q) {
    console.log(q);
    console.log(this.state.movieDataBase);
    let filteredM = this.state.movieDataBase.filter(i => i.title.includes(q));
    console.log(filteredM);
    this.updatefilteredMovies(filteredM);
  }

  render() {
    return React.createElement(
      'div',
      { className: 'movie-list' },
      React.createElement(
        'div',
        null,
        React.createElement(Movies, { filteredMovies: this.state.filteredMovies })
      ),
      React.createElement(Search, { updateSearchStr: this.updateSearchStr, updatefilteredMovies: this.updatefilteredMovies, searchMovies: this.searchMovies }),
      React.createElement(Add, null)
    );
  }
}

MovieList.propTypes = {
  exampleMovieList: React.PropTypes.array.isRequired
};
export default MovieList;
window.MovieList = MovieList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvTW92aWVMaXN0LmpzIl0sIm5hbWVzIjpbIk1vdmllcyIsIlNlYXJjaCIsIkFkZCIsIk1vdmllTGlzdCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwibW92aWVEYXRhQmFzZSIsImV4YW1wbGVNb3ZpZUxpc3QiLCJmaWx0ZXJlZE1vdmllcyIsInNlYXJjaFN0ciIsInVwZGF0ZVNlYXJjaFN0ciIsImJpbmQiLCJ1cGRhdGVmaWx0ZXJlZE1vdmllcyIsInNlYXJjaE1vdmllcyIsImUiLCJzZXRTdGF0ZSIsInRhcmdldCIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsIm5ld0xpc3QiLCJxIiwiZmlsdGVyZWRNIiwiZmlsdGVyIiwiaSIsInRpdGxlIiwiaW5jbHVkZXMiLCJyZW5kZXIiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhcnJheSIsImlzUmVxdWlyZWQiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE1BQVAsTUFBbUIsYUFBbkI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGFBQW5CO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixVQUFoQjs7QUFFQSxNQUFNQyxTQUFOLFNBQXdCQyxNQUFNQyxTQUE5QixDQUF3QztBQUNwQ0MsY0FBWUMsS0FBWixFQUFtQjtBQUNqQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLHFCQUFnQixLQUFLRixLQUFMLENBQVdHLGdCQURoQjtBQUVYQyxzQkFBaUIsS0FBS0osS0FBTCxDQUFXRyxnQkFGakI7QUFHWEUsaUJBQVk7QUFIRCxLQUFiO0FBS0EsU0FBS0MsZUFBTCxHQUF1QixLQUFLQSxlQUFMLENBQXFCQyxJQUFyQixDQUEwQixJQUExQixDQUF2QjtBQUNBLFNBQUtDLG9CQUFMLEdBQTRCLEtBQUtBLG9CQUFMLENBQTBCRCxJQUExQixDQUErQixJQUEvQixDQUE1QjtBQUNBLFNBQUtFLFlBQUwsR0FBb0IsS0FBS0EsWUFBTCxDQUFrQkYsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBcEI7QUFDRDs7QUFFREQsa0JBQWdCSSxDQUFoQixFQUFrQjtBQUNoQjtBQUNBLFNBQUtDLFFBQUwsQ0FBYztBQUNaTixpQkFBV0ssRUFBRUUsTUFBRixDQUFTQztBQURSLEtBQWQ7QUFHQUMsWUFBUUMsR0FBUixDQUFZLEtBQUtkLEtBQUwsQ0FBV0ksU0FBdkI7QUFDQTtBQUNEO0FBQ0RHLHVCQUFxQlEsT0FBckIsRUFBNkI7QUFDM0IsU0FBS0wsUUFBTCxDQUFjO0FBQ1pQLHNCQUFnQlk7QUFESixLQUFkO0FBR0Q7O0FBRURQLGVBQWFRLENBQWIsRUFBZTtBQUNiSCxZQUFRQyxHQUFSLENBQVlFLENBQVo7QUFDQUgsWUFBUUMsR0FBUixDQUFZLEtBQUtkLEtBQUwsQ0FBV0MsYUFBdkI7QUFDQSxRQUFJZ0IsWUFBWSxLQUFLakIsS0FBTCxDQUFXQyxhQUFYLENBQXlCaUIsTUFBekIsQ0FBZ0NDLEtBQUlBLEVBQUVDLEtBQUYsQ0FBUUMsUUFBUixDQUFpQkwsQ0FBakIsQ0FBcEMsQ0FBaEI7QUFDQUgsWUFBUUMsR0FBUixDQUFZRyxTQUFaO0FBQ0EsU0FBS1Ysb0JBQUwsQ0FBMEJVLFNBQTFCO0FBQ0Q7O0FBRURLLFdBQVM7QUFDUCxXQUNFO0FBQUE7QUFBQSxRQUFLLFdBQVUsWUFBZjtBQUNBO0FBQUE7QUFBQTtBQUNBLDRCQUFDLE1BQUQsSUFBUSxnQkFBa0IsS0FBS3RCLEtBQUwsQ0FBV0csY0FBckM7QUFEQSxPQURBO0FBSUEsMEJBQUMsTUFBRCxJQUFRLGlCQUFtQixLQUFLRSxlQUFoQyxFQUFpRCxzQkFBdUIsS0FBS0Usb0JBQTdFLEVBQW1HLGNBQWMsS0FBS0MsWUFBdEgsR0FKQTtBQUtBLDBCQUFDLEdBQUQ7QUFMQSxLQURGO0FBU0Q7QUE3Q21DOztBQWdEeENiLFVBQVU0QixTQUFWLEdBQXNCO0FBQ3BCckIsb0JBQWtCTixNQUFNNEIsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDO0FBRHBCLENBQXRCO0FBR0EsZUFBZS9CLFNBQWY7QUFDQWdDLE9BQU9oQyxTQUFQLEdBQWlCQSxTQUFqQiIsImZpbGUiOiJNb3ZpZUxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aWVzIGZyb20gJy4vTW92aWVzLmpzJztcbmltcG9ydCBTZWFyY2ggZnJvbSAnLi9TZWFyY2guanMnO1xuaW1wb3J0IEFkZCBmcm9tICcuL0FkZC5qcyc7XG5cbmNsYXNzIE1vdmllTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgIHRoaXMuc3RhdGUgPSB7ICBcbiAgICAgICAgbW92aWVEYXRhQmFzZSA6IHRoaXMucHJvcHMuZXhhbXBsZU1vdmllTGlzdCxcbiAgICAgICAgZmlsdGVyZWRNb3ZpZXMgOiB0aGlzLnByb3BzLmV4YW1wbGVNb3ZpZUxpc3QsXG4gICAgICAgIHNlYXJjaFN0ciA6IFwiKlwiXG4gICAgICB9XG4gICAgICB0aGlzLnVwZGF0ZVNlYXJjaFN0ciA9IHRoaXMudXBkYXRlU2VhcmNoU3RyLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLnVwZGF0ZWZpbHRlcmVkTW92aWVzID0gdGhpcy51cGRhdGVmaWx0ZXJlZE1vdmllcy5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5zZWFyY2hNb3ZpZXMgPSB0aGlzLnNlYXJjaE1vdmllcy5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVNlYXJjaFN0cihlKXtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzZWFyY2hTdHI6IGUudGFyZ2V0LnZhbHVlLFxuICAgICAgfSlcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdGUuc2VhcmNoU3RyKTtcbiAgICAgIC8vIHRoaXMuc2VhcmNoTW92aWVzKHRoaXMuc3RhdGUuc2VhcmNoU3RyKTtcbiAgICB9XG4gICAgdXBkYXRlZmlsdGVyZWRNb3ZpZXMobmV3TGlzdCl7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZmlsdGVyZWRNb3ZpZXM6IG5ld0xpc3QsXG4gICAgICB9KVxuICAgIH1cblxuICAgIHNlYXJjaE1vdmllcyhxKXtcbiAgICAgIGNvbnNvbGUubG9nKHEpO1xuICAgICAgY29uc29sZS5sb2codGhpcy5zdGF0ZS5tb3ZpZURhdGFCYXNlKTtcbiAgICAgIGxldCBmaWx0ZXJlZE0gPSB0aGlzLnN0YXRlLm1vdmllRGF0YUJhc2UuZmlsdGVyKGk9PiBpLnRpdGxlLmluY2x1ZGVzKHEpKTtcbiAgICAgIGNvbnNvbGUubG9nKGZpbHRlcmVkTSk7XG4gICAgICB0aGlzLnVwZGF0ZWZpbHRlcmVkTW92aWVzKGZpbHRlcmVkTSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb3ZpZS1saXN0XCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgIDxNb3ZpZXMgZmlsdGVyZWRNb3ZpZXMgPSB7dGhpcy5zdGF0ZS5maWx0ZXJlZE1vdmllc30vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPFNlYXJjaCB1cGRhdGVTZWFyY2hTdHIgPSB7dGhpcy51cGRhdGVTZWFyY2hTdHJ9IHVwZGF0ZWZpbHRlcmVkTW92aWVzID17dGhpcy51cGRhdGVmaWx0ZXJlZE1vdmllc30gc2VhcmNoTW92aWVzPXt0aGlzLnNlYXJjaE1vdmllc30gLz5cbiAgICAgICAgPEFkZCAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIClcbiAgICB9XG59XG4gIFxuTW92aWVMaXN0LnByb3BUeXBlcyA9IHtcbiAgZXhhbXBsZU1vdmllTGlzdDogUmVhY3QuUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWRcbn07XG5leHBvcnQgZGVmYXVsdCBNb3ZpZUxpc3Q7XG53aW5kb3cuTW92aWVMaXN0PU1vdmllTGlzdDsiXX0=